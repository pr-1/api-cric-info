{"version":3,"sources":["AsyncAutoMapper.ts"],"names":[],"mappings":"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","file":"AsyncAutoMapper.js","sourcesContent":["/// <reference path=\"../../dist/automapper-interfaces.d.ts\" />\r\n/// <reference path=\"AutoMapper.ts\" />\r\n/// <reference path=\"TypeConverter.ts\" />\r\n/// <reference path=\"AutoMapperHelper.ts\" />\r\n/// <reference path=\"AutoMapperValidator.ts\" />\r\n\r\nmodule AutoMapperJs {\r\n    'use strict';\r\n\r\n    // interface shorthands\r\n    type IDMCO = IMemberConfigurationOptions;\r\n    type ISMCO = ISourceMemberConfigurationOptions;\r\n\r\n    /**\r\n     * AsyncAutoMapper implementation, for asynchronous mapping support when using AutoMapper.\r\n     */\r\n    export class AsyncAutoMapper extends AutoMapperBase {\r\n        private static asyncInstance = new AsyncAutoMapper();\r\n\r\n        constructor() {\r\n            super();\r\n            AsyncAutoMapper.asyncInstance = this;\r\n        }\r\n\r\n        public createMap(sourceKeyOrType: string | (new () => any), destinationKeyOrType: string | (new () => any)): any {\r\n            throw new Error('Method AsyncAutoMapper.createMap is not implemented.');\r\n        }\r\n\r\n        public createMapForMember(mapping: IMapping, property: ISourceProperty): void {\r\n            mapping.async = true;\r\n            mapping.mapItemFunction = (m: IMapping, srcObj: any, dstObj: any, cb: IMapCallback): void => this.mapItem(m, srcObj, dstObj, cb);\r\n            // property.async = true;\r\n            // property.conversionValuesAndFunctions.push(func);\r\n        }\r\n\r\n        public createMapConvertUsing(mapping: IMapping, converterFunction: (ctx: IResolutionContext, cb: IMapCallback) => void): void {\r\n            mapping.async = true;\r\n            mapping.typeConverterFunction = converterFunction;\r\n            mapping.mapItemFunction = (m: IMapping, srcObj: any, dstObj: any, cb: IMapCallback): void => this.mapItemUsingTypeConverter(m, srcObj, dstObj, cb);\r\n        }\r\n\r\n        public map(m: { [key: string]: IMapping }, srcKey: string | (new () => any)): (dstKey: string | (new () => any), srcObj: any, cb: IMapCallback) => void;\r\n        public map(m: { [key: string]: IMapping }, srcKey: string | (new () => any), dstKey: string | (new () => any)): (srcObj: any, cb: IMapCallback) => void;\r\n        public map(m: { [key: string]: IMapping }, srcKey: string | (new () => any), dstKey?: string | (new () => any), sourceObject?: any): (cb: IMapCallback) => void;\r\n        public map(m: { [key: string]: IMapping }, srcKey: string | (new () => any), dstKey?: string | (new () => any), sourceObject?: any, cb?: IMapCallback): void;\r\n        public map(mappings: { [key: string]: IMapping },\r\n            sourceKey: string | (new () => any),\r\n            destinationKey?: string | (new () => any),\r\n            sourceObject?: any,\r\n            callback?: IMapCallback): any /* actually, void (impossible with overloads) */ {\r\n\r\n            switch (arguments.length) {\r\n                case 5:\r\n                    this.mapWithMapping(super.getMapping(mappings, sourceKey, destinationKey), sourceObject, callback);\r\n                    return;\r\n                // provide performance optimized (preloading) currying support.\r\n                case 4:\r\n                    return (cb: IMapCallback): void => this.mapWithMapping(super.getMapping(mappings, sourceKey, destinationKey), sourceObject, cb);\r\n                case 3:\r\n                    return (srcObj: any, cb: IMapCallback): void => this.mapWithMapping(super.getMapping(mappings, sourceKey, destinationKey), srcObj, cb);\r\n                case 2:\r\n                    return (dstKey: string | (new () => any), srcObj: any, cb: IMapCallback): void => this.map(mappings, sourceKey, dstKey, srcObj, cb);\r\n                default:\r\n                    throw new Error('The AsyncAutoMapper.map function expects between 2 and 5 parameters, you provided ' + arguments.length + '.');\r\n            }\r\n        }\r\n\r\n        public mapWithMapping(mapping: IMapping, sourceObject: any, callback: IMapCallback): void {\r\n            if (super.isArray(sourceObject)) {\r\n                this.mapArray(mapping, sourceObject, callback);\r\n                return;\r\n            }\r\n\r\n            return (<IAsyncMapItemFunction>mapping.mapItemFunction)(mapping, sourceObject, super.createDestinationObject(mapping.destinationTypeClass), callback);\r\n        }\r\n\r\n        /**\r\n         * Execute a mapping from the source array to a new destination array with explicit mapping configuration and supplied mapping options (using createMap).\r\n         * @param mapping The mapping configuration for the current mapping keys/types.\r\n         * @param sourceArray The source array to map.\r\n         * @returns {Array<any>} Destination array.\r\n         */\r\n        private mapArray(mapping: IMapping, sourceArray: Array<any>, callback: IMapCallback): void {\r\n            var callbacksToGo = 0;\r\n\r\n            var destinationArray = super.handleArray(mapping, sourceArray, (sourceObject: any, destinationObject: any) => {\r\n                callbacksToGo++;\r\n                (<IAsyncMapItemFunction>mapping.mapItemFunction)(mapping, sourceObject, destinationObject, (result: any): void => {\r\n                    callbacksToGo--;\r\n                });\r\n            });\r\n\r\n            var waitForCallbackToSend = (): void => {\r\n                if (callbacksToGo === 0) {\r\n                    callback(destinationArray);\r\n                } else {\r\n                    setTimeout((): void => {\r\n                        waitForCallbackToSend();\r\n                    }, 10 * callbacksToGo);\r\n                }\r\n            };\r\n\r\n            waitForCallbackToSend();\r\n        }\r\n\r\n        private mapItemUsingTypeConverter(mapping: IMapping, sourceObject: any, destinationObject: any, callback: IMapCallback): void {\r\n            var resolutionContext: IResolutionContext = {\r\n                sourceValue: sourceObject,\r\n                destinationValue: destinationObject\r\n            };\r\n            (<(ctx: IResolutionContext, cb: IMapCallback) => any>mapping.typeConverterFunction)(resolutionContext, callback);\r\n        }\r\n\r\n        /**\r\n         * Execute a mapping from the source object to a new destination object with explicit mapping configuration and supplied mapping options (using createMap).\r\n         * @param mapping The mapping configuration for the current mapping keys/types.\r\n         * @param sourceObject The source object to map.\r\n         * @param destinationObject The destination object to map to.\r\n         * @param callback The callback to call after async mapping has been executed.\r\n         */\r\n        private mapItem(mapping: IMapping, sourceObject: any, destinationObject: any, callback: IMapCallback): void {\r\n            var callbacksToGo = 0;\r\n\r\n            super.handleItem(mapping, sourceObject, destinationObject, (sourceProperty: string) => {\r\n                callbacksToGo++;\r\n                this.mapProperty(mapping, sourceObject, sourceProperty, destinationObject, (result: any): void => {\r\n                    callbacksToGo--;\r\n                });\r\n            });\r\n\r\n            var waitForCallbackToSend = (): void => {\r\n                if (callbacksToGo === 0) {\r\n                    callback(destinationObject);\r\n                } else {\r\n                    setTimeout((): void => {\r\n                        waitForCallbackToSend();\r\n                    }, 10 * callbacksToGo);\r\n                }\r\n            };\r\n\r\n            waitForCallbackToSend();\r\n        }\r\n\r\n        /**\r\n         * Execute a mapping from the source object property to the destination object property with explicit mapping configuration and supplied mapping options.\r\n         * @param mapping The mapping configuration for the current mapping keys/types.\r\n         * @param sourceObject The source object to map.\r\n         * @param sourcePropertyName The source property to map.\r\n         * @param destinationObject The destination object to map to.\r\n         * @param callback The callback to call after async property mapping has been executed.\r\n         */\r\n        private mapProperty(mapping: IMapping, sourceObject: any, sourceProperty: string, destinationObject: any, callback: IMemberCallback): void {\r\n            super.handleProperty(mapping, sourceObject, sourceProperty, destinationObject,\r\n                (destinationProperty: IDestinationProperty, options: IDMCO) => {\r\n                    this.transform(mapping, sourceObject, destinationProperty, destinationObject, options, (destinationPropertyValue: any, success: boolean) => {\r\n                        callback(destinationPropertyValue);\r\n                    });\r\n                }, (destinationPropertyValue: any) => {\r\n                    callback(destinationPropertyValue);\r\n                });\r\n        }\r\n\r\n        private transform(\r\n            mapping: IMapping,\r\n            sourceObject: any,\r\n            destinationProperty: IDestinationProperty,\r\n            destinationObject: any,\r\n            options: IDMCO,\r\n            callback: IAsyncTransformCallback\r\n        ): void {\r\n            var childDestinationProperty = destinationProperty.child;\r\n            if (childDestinationProperty) {\r\n                var childDestinationObject = destinationObject[destinationProperty.name];\r\n                if (!childDestinationObject) {\r\n                    // no child source object? create.\r\n                    childDestinationObject = <any>{};\r\n                }\r\n\r\n                // transform child by recursively calling the transform function.\r\n                this.transform(mapping, sourceObject, childDestinationProperty, childDestinationObject, options, (callbackValue: any, success: boolean): void => {\r\n                    if (success) {\r\n                        // only set child destination object when transformation has been successful.\r\n                        destinationObject[destinationProperty.name] = childDestinationObject;\r\n                    }\r\n\r\n                    callback(options.intermediatePropertyValue, success);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!super.shouldProcessDestination(destinationProperty, sourceObject)) {\r\n                callback(undefined /* opts.intermediatePropertyValue */, false);\r\n                return;\r\n            }\r\n\r\n            // actually transform destination property.\r\n            this.processTransformations(destinationProperty, destinationProperty.transformations, options, (callbackValue: any, success: boolean) => {\r\n                if (success) {\r\n                    super.setPropertyValue(mapping, destinationProperty, destinationObject, options.intermediatePropertyValue);\r\n                }\r\n                callback(options.intermediatePropertyValue, success);\r\n            });\r\n        }\r\n\r\n        private processTransformations(\r\n            property: IDestinationProperty, transformations: IDestinationTransformation[], options: IDMCO, callback: IAsyncTransformCallback\r\n        ): void {\r\n            if (transformations.length === 0) {\r\n                callback(options.intermediatePropertyValue, true);\r\n                return;\r\n            }\r\n\r\n            let transformation = transformations[0];\r\n            this.processTransformation(property, transformation, options, (callbackValue: any, success: boolean) => {\r\n                if (!success) {\r\n                    callback(options.intermediatePropertyValue, false);\r\n                    return;\r\n                }\r\n\r\n                this.processTransformations(property, transformations.slice(1), options, callback);\r\n            });\r\n        }\r\n\r\n        private processTransformation(\r\n            property: IDestinationProperty, transformation: IDestinationTransformation, options: IDMCO, callback: IAsyncTransformCallback\r\n        ): void {\r\n            switch (transformation.transformationType) {\r\n                case DestinationTransformationType.Constant:\r\n                    options.intermediatePropertyValue = transformation.constant;\r\n\r\n                    callback(options.intermediatePropertyValue, true);\r\n                    return;\r\n                case DestinationTransformationType.MemberOptions: {\r\n                    let result = transformation.memberConfigurationOptionsFunc(options);\r\n                    if (typeof result !== 'undefined') {\r\n                        options.intermediatePropertyValue = result;\r\n                    } else if (!options.sourceObject) {\r\n                        callback(options.intermediatePropertyValue, false);\r\n                        return;\r\n                    }\r\n\r\n                    callback(options.intermediatePropertyValue, true);\r\n                    return;\r\n                }\r\n                case DestinationTransformationType.SourceMemberOptions: {\r\n                    let result = transformation.sourceMemberConfigurationOptionsFunc(<ISMCO>options);\r\n                    if (typeof result !== 'undefined') {\r\n                        options.intermediatePropertyValue = result;\r\n                    } else if (!options.sourceObject) {\r\n                        callback(options.intermediatePropertyValue, false);\r\n                        return;\r\n                    }\r\n\r\n                    callback(options.intermediatePropertyValue, true);\r\n                    return;\r\n                }\r\n                case DestinationTransformationType.AsyncMemberOptions:\r\n                    transformation.asyncMemberConfigurationOptionsFunc(options, (result: any) => {\r\n                        if (typeof result !== 'undefined') {\r\n                            options.intermediatePropertyValue = result;\r\n                        }\r\n\r\n                        callback(options.intermediatePropertyValue, true);\r\n                        return;\r\n                    });\r\n                    return;\r\n                case DestinationTransformationType.AsyncSourceMemberOptions:\r\n                    transformation.asyncSourceMemberConfigurationOptionsFunc(options, (result: any) => {\r\n                        if (typeof result !== 'undefined') {\r\n                            options.intermediatePropertyValue = result;\r\n                        }\r\n\r\n                        callback(options.intermediatePropertyValue, true);\r\n                        return;\r\n                    });\r\n                    return;\r\n                default:\r\n                    // TODO: this.throwMappingException(property, `AutoMapper.handlePropertyMappings: Unexpected transformation type ${transformation}`);\r\n                    callback(options.intermediatePropertyValue, false);\r\n                    return;\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}